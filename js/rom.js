/*
 JsAlto Xerox Alto Emulator
 Copyright (C) 2016  Seth J. Morabito

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see
 <http://www.gnu.org/licenses/>.
*/


//
// ROM images
//

// Control ROM

var CROM = [0x0000, 0x0001, 0x0002, 0xfffe, 0xffff, 0xffff, 0x000f, 0xffff,
            0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0xfff8, 0xfff8,
            0x0010, 0x001f, 0x0020, 0x003f, 0x0040, 0x007f, 0x0080, 0x0007,
            0x00ff, 0xff00, 0x0400, 0x0100, 0x0110, 0x0151, 0x0114, 0x000f,
            0x0116, 0x0118, 0x0ffa, 0xf000, 0x4000, 0xfffc, 0xfff6, 0xffeb,
            0x4800, 0x6c00, 0x0800, 0x1000, 0xfe00, 0x7fff, 0x7fe0, 0x7f00,
            0xffbd, 0x0f00, 0x0f0f, 0xf0f0, 0x6048, 0x3000, 0x7159, 0x2109,
            0x6a3c, 0x4213, 0xa5a5, 0xfe1c, 0x3f00, 0xffc0, 0x012a, 0x0140,
            0x8000, 0xffe0, 0x00bf, 0xfff9, 0xfff0, 0xfffd, 0x0970, 0x5d20,
            0x3844, 0x6814, 0xfc00, 0xfe20, 0xfe22, 0x0083, 0x00f0, 0xff80,
            0xf800, 0xe000, 0xc000, 0x01ff, 0x03ff, 0x07ff, 0x0fff, 0x1fff,
            0x3fff, 0x0200, 0x2000, 0xfff1, 0x0156, 0x0157, 0x0138, 0x0c00,
            0x0130, 0x1813, 0x0180, 0x0181, 0x0182, 0x0183, 0x0184, 0x0185,
            0x0186, 0x0187, 0x0188, 0x018a, 0x0112, 0x0113, 0x0102, 0xfff0,
            0x0153, 0x0154, 0xffef, 0xffe4, 0xfffb, 0x000a, 0xffc1, 0x001f,
            0x0e00, 0x007e, 0xff7e, 0x0018, 0x000d, 0x03f8, 0x83f9, 0xffe0,
            0xfbff, 0x0009, 0x000b, 0x000c, 0x000e, 0x0030, 0x01fe, 0xff7f,
            0x81ff, 0xffbf, 0xffcc, 0x0557, 0x0041, 0x0198, 0x0199, 0x01a2,
            0xfe72, 0xfe58, 0x0012, 0x0014, 0x00dd, 0x02ff, 0x0101, 0x0001,
            0x0401, 0x0011, 0x0013, 0x0015, 0x0016, 0x0017, 0x0019, 0x0003,
            0x03bd, 0x01de, 0xfe50, 0x00c0, 0x0c01, 0x6200, 0x6300, 0x0008,
            0x6400, 0x6500, 0x6e00, 0x6700, 0x6900, 0x6d00, 0x6600, 0x000c,
            0x6b00, 0x6b01, 0x6b02, 0x6b03, 0x6b04, 0x6b05, 0x6b06, 0x0010,
            0x6b07, 0x6b08, 0x6b09, 0x6b0a, 0x6b0b, 0x6b0c, 0x6b0d, 0x0020,
            0x6b0e, 0x6b0f, 0xfff3, 0xfe14, 0xfe15, 0xfe16, 0x0ffc, 0x0040,
            0x04ff, 0x05ff, 0x06ff, 0x013f, 0x017e, 0xfe7d, 0xffff, 0x0080,
            0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x00c0,
            0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x00ff,
            0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
            0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
            0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
            0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff];

// ACSOURCE ROM

var ACSROM = [0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
              0x02, 0x05, 0x03, 0x06, 0x07, 0x0e, 0x0e, 0x0e,
              0x0e, 0x04, 0x04, 0x0e, 0x0e, 0x0e, 0x01, 0x0e,
              0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e,
              0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f,
              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
              0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
              0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
              0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
              0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
              0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
              0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
              0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
              0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
              0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
              0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
              0x01, 0x00, 0x02, 0x03, 0x04, 0x05, 0x0e, 0x07,
              0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x06, 0x0f,
              0x01, 0x00, 0x02, 0x03, 0x04, 0x05, 0x0e, 0x07,
              0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x06, 0x0f];


var MicrocodeBank = {
    ROM0: 0,
    ROM1: 1,
    RAM0: 2,
    RAM1: 3,
    RAM2: 4
};

var uCodeMemory = {
    getInstruction: function() {
        // TODO: Implement
        return new MicroInstruction(0);
    },

    loadBanksFromRMR: function(rmr) {
        // TODO: Implement
        return;
    }
};
